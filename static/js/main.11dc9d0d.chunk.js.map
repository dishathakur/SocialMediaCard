{"version":3,"sources":["assets/images/americanProfile.jpg","components/AddComment.js","components/Comment.js","components/Comments.js","components/PostCard.js","components/SocialMediaCard.js","App.js","index.js"],"names":["AddComment","postID","showComment","useState","comment","setComment","onSubmit","e","preventDefault","body","postId","alert","type","placeholder","value","onChange","target","Comment","Comments","comments","map","index","PostCard","postData","like","love","commentData","showAddComment","setShowAddComment","setShowComment","toggleComments","id","fetchPostComments","a","fetch","res","json","console","log","useEffect","Card","style","width","Img","variant","src","img","Body","Title","Text","post_description","marginRight","icon","faThumbsUp","onClick","faHeart","laugh","faSmile","faCommentAlt","SocialMediaCard","data","setData","commenttext","setCommenttext","getPosts","fetchPosts","postsFromServer","getComments","fetchComments","commentsFromServer","post","fetchPost","likeHandler","postToLike","likePost","method","headers","JSON","stringify","postDB","loveHandler","postToLove","lovePost","text","Container","Row","Col","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11dc9d0d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/americanProfile.3d8ad1a0.jpg\";","import { useState } from 'react';\r\n\r\nconst AddComment = ({ AddComment, postID, showComment }) => {\r\n    const [comment, setComment] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!comment) {\r\n            alert('Please add a comment')\r\n            return\r\n        }\r\n\r\n        AddComment({ body: comment, postId: postID })\r\n        showComment(postID)\r\n        setComment('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input type=\"text\" placeholder=\"Add Comment...\" value={comment} onChange={e => setComment(e.target.value)} />\r\n            <input type=\"submit\" placeholder=\"Save Comment\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddComment;\r\n","\r\nconst Comment = (comment) => {\r\n\r\n    return (\r\n        < div >\r\n            {comment.comment.body}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","import Comment from './Comment'\r\n\r\nconst Comments = ({ comments }) => {\r\n    return (\r\n        <>\r\n            {comments.map((comment, index) => {\r\n                return (<Comment key={index} comment={comment} />)\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","import Card from 'react-bootstrap/Card';\r\n// image\r\nimport img from './../assets/images/americanProfile.jpg';\r\n// icons\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faThumbsUp, faHeart, faSmile, faCommentAlt } from '@fortawesome/free-regular-svg-icons'\r\nimport AddComment from './AddComment';\r\nimport { useEffect, useState } from 'react';\r\nimport Comments from './Comments';\r\n\r\nconst PostCard = ({ postData, like, love, comment, commentData }) => {\r\n    const [showAddComment, setShowAddComment] = useState(false)\r\n\r\n    const [showComment, setShowComment] = useState([])\r\n\r\n\r\n    // const fetchComments = (id) => {\r\n    //     setShowAddComment(!showAddComment)\r\n    //     const data = commentData(id)\r\n    //     data.then(d =>\r\n    //         setShowComment(d)\r\n    //     )\r\n    // }\r\n\r\n    const toggleComments = (id) => {\r\n        setShowAddComment(!showAddComment)\r\n        fetchPostComments(id)\r\n    }\r\n\r\n    // fetch comments for a particular post\r\n    const fetchPostComments = async (id) => {\r\n        const res = await fetch(`http://localhost:5000/comments?postId=${id}`)\r\n        const comment = await res.json()\r\n        setShowComment(comment)\r\n        console.log(showComment);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // const getComments = async() => {\r\n        //     const commentsFromServer = await fetchPostComments()\r\n        // }\r\n    }, [showComment]);\r\n\r\n\r\n    return (\r\n        <Card style={{ width: '18rem' }} key={postData.id}>\r\n            <Card.Img variant=\"top\" src={img} />\r\n            <Card.Body>\r\n                <Card.Title>Description</Card.Title>\r\n                <Card.Text>\r\n                    {postData.post_description}\r\n                </Card.Text>\r\n                <span style={{ marginRight: '20px' }}>{postData.like}<FontAwesomeIcon icon={faThumbsUp} onClick={() => like(postData.id)} /></span>\r\n                <span style={{ marginRight: '20px' }}>{postData.love}<FontAwesomeIcon icon={faHeart} onClick={() => love(postData.id)} /></span>\r\n                <span style={{ marginRight: '20px' }}>{postData.laugh}<FontAwesomeIcon icon={faSmile} /></span>\r\n                <span style={{ marginRight: '20px' }}><FontAwesomeIcon icon={faCommentAlt} onClick={() => toggleComments(postData.id)} /></span>\r\n                {showAddComment &&\r\n                    <>\r\n                        <AddComment AddComment={comment} postID={postData.id} showComment={toggleComments} />\r\n                        <Comments comments={showComment} />\r\n                    </>\r\n                }\r\n\r\n            </Card.Body>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard;\r\n","import PostCard from './PostCard';\r\nimport { useState, useEffect } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nconst SocialMediaCard = () => {\r\n    const [data, setData] = useState([]);\r\n\r\n    const [commenttext, setCommenttext] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getPosts = async () => {\r\n            const postsFromServer = await fetchPosts()\r\n            setData(postsFromServer)\r\n        }\r\n\r\n        const getComments = async () => {\r\n            const commentsFromServer = await fetchComments()\r\n            setCommenttext(commentsFromServer)\r\n        }\r\n\r\n        getPosts()\r\n        getComments()\r\n    }, [])\r\n\r\n    // fetch posts from server\r\n    const fetchPosts = async () => {\r\n        const res = await fetch('http://localhost:5000/posts')\r\n        const post = await res.json()\r\n\r\n        return post;\r\n    }\r\n\r\n    // fetch single post from server\r\n    const fetchPost = async (id) => {\r\n        const res = await fetch(`http://localhost:5000/posts/${id}`)\r\n        const post = await res.json()\r\n\r\n        return post;\r\n    }\r\n\r\n    // fetch comments from server\r\n    const fetchComments = async () => {\r\n        const res = await fetch('http://localhost:5000/comments')\r\n        const comment = await res.json()\r\n\r\n        return comment;\r\n    }\r\n\r\n    // fetch comments for a particular post\r\n    const fetchPostComments = async (id) => {\r\n        const res = await fetch(`http://localhost:5000/comments?postId=${id}`)\r\n        const comment = await res.json()\r\n\r\n        return comment;\r\n    }\r\n\r\n    const likeHandler = async (id) => {\r\n        const postToLike = await fetchPost(id)\r\n        const likePost = { ...postToLike, like: postToLike.like + 1 }\r\n\r\n        const res = await fetch(`http://localhost:5000/posts/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(likePost)\r\n        })\r\n\r\n        const postDB = await res.json()\r\n\r\n        setData(\r\n            data.map((post) => {\r\n                return (\r\n                    post.id === id ? { ...post, like: (postDB.like) } : post\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    const loveHandler = async (id) => {\r\n        const postToLove = await fetchPost(id)\r\n        const lovePost = { ...postToLove, love: postToLove.love + 1 }\r\n\r\n        const res = await fetch(`http://localhost:5000/posts/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(lovePost)\r\n        })\r\n\r\n        const postDB = await res.json()\r\n\r\n        setData(\r\n            data.map((post) => {\r\n                return (\r\n                    post.id === id ? { ...post, love: postDB.love } : post\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    const AddComment = async (text) => {\r\n        const res = await fetch('http://localhost:5000/comments', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(text)\r\n        })\r\n\r\n        const data = await res.json()\r\n\r\n        setCommenttext([...commenttext, data])\r\n\r\n        // const id = 2\r\n        // const newComment = { id, ...text }\r\n        // setCommenttext([...commenttext, newComment])\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     // action on update of movies\r\n    // }, [commenttext]);\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row>\r\n                    {\r\n                        data.map((post, index) => {\r\n                            return (\r\n                                <Col>\r\n                                    <PostCard key={index} postData={post} like={likeHandler} love={loveHandler} comment={AddComment} commentData={fetchPostComments}\r\n                                    />\r\n                                </Col>\r\n                            )\r\n                        })\r\n\r\n                    }\r\n                </Row>\r\n            </Container>\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SocialMediaCard;\r\n","import './App.css';\nimport SocialMediaCard from './components/SocialMediaCard';\n\nconst App = () => {\n\n    return (\n        <div className=\"App\">\n            <SocialMediaCard />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}